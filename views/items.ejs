<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Easy Menu</title>

    <!-- Custom fonts for this template-->
    <link href="/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">
        <!-- Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Toggle CSS -->
    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="/css/sb-admin-2.min.css" rel="stylesheet">

        <style>
        .sortable-list {
            list-style-type: none;
            margin: 0;
            padding: 0;
            width: 300px;
            margin: 0 auto;
        }

        .sortable-list li {
            margin: 5px 0;
            padding: 10px;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            cursor: move;
            border-radius: 8px;
        }

        .centered-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            text-align: center;
        }

        .centered-row {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row; /* This ensures the children are laid out in a row */
    text-align: center; /* This centers the text inside the children, if needed */
}
.dropdown-menu {
    max-height: 200px; /* Adjust the height as needed */
    overflow-y: auto;
}


    </style>
</head>

<body id="page-top">

  <!-- ***** Preloader Start ***** -->
  <div id="js-preloader" class="js-preloader">
    <div class="preloader-inner">
      <span class="dot"></span>
      <div class="dots">
        <span></span>
        <span></span>
        <span></span>
      </div>
    </div>
  </div>
  <!-- ***** Preloader End ***** -->

  <!-- ***** Header Area Start ***** -->
  <link rel="alternate" hreflang="en" href="https://easymenus.eu">
<link rel="alternate" hreflang="de" href="https://de.easymenus.eu">
<script type="text/javascript" src="https://cdn.weglot.com/weglot.min.js"></script>
<script>
    Weglot.initialize({
        api_key: 'wg_ccdc61525b763853033f4669bd1f972d2'
    });
</script>

<!-- Update Item Modal -->
<div class="modal fade" id="updateItemModal" tabindex="-1" aria-labelledby="updateItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateItemModalLabel">Update Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="updateItemForm" onsubmit="updateItem(event)">
                <div class="modal-body">
                    <input type="hidden" name="itemId" id="updateItemId">
                    <div class="form-group">
                        <label for="updateItemName">Item Name</label>
                        <input type="text" class="form-control" id="updateItemName" name="itemName" required>
                    </div>
                    <div class="form-group">
                        <label for="updateItemPrice">Item Price</label>
                        <input type="text" class="form-control" id="updateItemPrice" name="price" required>
                    </div>
                    <div class="form-group">
                        <label for="updateItemDescription">Item Description</label>
                        <input type="text" class="form-control" id="updateItemDescription" name="description" required>
                    </div>
                    <div class="form-group">
                        <label for="updateFoodType">Food Type</label>
                        <div class="control">
                            <label class="radio">
                                <input type="radio" name="foodType" value="None" checked> None
                            </label>
                            <label class="radio">
                                <input type="radio" name="foodType" value="Vegan"> Vegan
                            </label>
                            <label class="radio">
                                <input type="radio" name="foodType" value="Vegetarian"> Vegetarian
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="updateItemAllergies">Allergies</label>
                        <button type="button" id="addUpdateAllergyBtn" class="btn btn-primary" style="margin-left: 10px;">Add Allergy</button>
                        <div class="col" style="text-align: center; margin: 20px;" id="updateAllergyInputs">
                            <!-- Allergy inputs will be added here -->
                        </div>
                        <div id="updateAllergyList" style="text-align: center; margin: 20px;">
                            <!-- Added allergies will be displayed here -->
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="updateItemCategory">Choose Category</label>
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" aria-expanded="false" id="updateItemCategory" data-bs-toggle="dropdown" type="button">Choose Category</button>
                            <input type="hidden" name="categoryId" id="updateCategoryId">
                            <div class="dropdown-menu setCategoryForUpdate">
                                <% categories.forEach(categry => { %>
                                    <a class="dropdown-item" id="<%= categry.category_id %>" href="#">
                                        <%= categry.category_name %>
                                    </a>
                                <% }) %>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="updateItemImage">Item Image <br/> *let it empty if you want to use the old image*</label>
                        <input type="file" class="form-control" id="updateItemImage" name="image" accept="image/*">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Update Item</button>
                </div>
                <div class="col" style="text-align: center;">
                    <label id="updateError" style="display: none;"></label>
                </div>
            </form>
        </div>
    </div>
</div>


    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="#">
                <div class="sidebar-brand-icon rotate-n-15">
                    <i class="fas fa-laugh-wink"></i>
                </div>
                <div class="sidebar-brand-text mx-3">Easy <sup>menu</sup></div>
            </a>

            <!-- Divider -->
            <hr class="sidebar-divider my-0">

            <!-- Nav Item - Dashboard -->
            <li class="nav-item">
                <!--<a class="nav-link" href="dashboard.html">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Dashboard</span></a>-->
            </li>

            <!-- Divider -->
            <hr class="sidebar-divider">

            <!-- Heading -->
            <div class="sidebar-heading">
                Interface
            </div>

            <!-- Nav Item - Pages Collapse Menu -->
            <li class="nav-item active">
                <a class="nav-link" href="/management/profile/<%= user.user_id %>"><i class="fas fa-fw fa-cog"></i><span>Profile</span></a>
                <a class="nav-link" href="/management/menu/<%= user.user_id %>"><i class="fas fa-fw fa-cog"></i><span>Menus</span></a>
                <a class="nav-link" href="/management/category/<%= user.user_id %>"><i class="fas fa-fw fa-cog"></i><span>Categories</span></a>
                <a class="nav-link" href="/management/items/<%= user.user_id %>"><i class="fas fa-fw fa-cog"></i><span>Items</span></a>
            </li>

        </ul>
        <!-- End of Sidebar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>

                    <!-- Topbar Navbar -->
                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">
                        <!-- Nav Item - Alerts -->
                        <li class="nav-item dropdown no-arrow mx-1">
                        </li>
                        </li>
                        <div class="topbar-divider d-none d-sm-block"></div>
                        <!-- Nav Item - User Information -->
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="mr-2 d-none d-lg-inline text-gray-600 small"><%= user.company_name %></span>
                                <img class="img-profile rounded-circle"
                                    src="/img/undraw_profile.svg">
                            </a>
                            <!-- Dropdown - User Information -->
                            <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                aria-labelledby="userDropdown">
                                <a class="dropdown-item" href="/management/profile/<%= user.user_id %>">
                                    <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Profile
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Logout
                                </a>
                            </div>
                        </li>

                    </ul>

                </nav>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class="container-fluid">
                    <div>
                        <div style="position: relative;display: flex;text-align: center;margin: 10px;">
                            <div class="col" style="text-align: center;position: relative;display: block;">
                                <label class="col-form-label">Here you can delete or update the selected item</label>
                            </div>
                        </div>
                        <div style="position: relative;display: flex;text-align: center;margin: 10px;margin-bottom: 30px;">
                            <div class="col" style="text-align: center;position: relative;display: block;">
                                <form action="/deleteitem" method="post">
                                    <div class="dropdown" style="text-align: center;display: inline;margin-right: 18px;">
                                        <button class="btn btn-primary dropdown-toggle" aria-expanded="false"
                                            data-bs-toggle="dropdown" id="deleteitem" name="item" type="button">Items </button>
                                        <div class="dropdown-menu deleteitem">
                                            <% items.forEach(item=> { %>
                                                <a class="dropdown-item" id="<%= item.item_id %>" href="#">
                                                    <%= item.item_name %>
                                                </a>
                                            <% }) %>
                                        </div>
                                    </div>
                                    <input type="hidden" name="itemId" id="itemId" />
                                    <div class="centered-row">
                                        <button class="btn btn-primary" type="button" id="updateButton" style="margin: 10px;">Update</button>
                                        <button class="btn btn-primary" type="submit" style="margin: 10px;">Delete</button>
                                        <div id="statusContainer" style="text-align: center; ">
                                            <input type="checkbox" id="toggleStatus" data-toggle="toggle" data-on="Active" data-off="Deactiv" data-onstyle="primary" data-offstyle="danger">
                                        </div>
                                    </div>
                                </form>
                                <div class="col" style="margin-top: 20px;">
                                    <label style="display: none;" id="messageForUpdate"></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="border-bottom-style: solid; margin:40px auto; width: 40%; text-align: center;"></div>
                </div>
                <form onsubmit="upload(event)" id="itemForm">
                    <!-- your form fields -->
                    <div style="position: relative;margin-top: 15px;">
                        <div class="col" style="text-align: center;"><label class="col-form-label"
                                style="position: relative;text-shadow: 0px 0px 0px var(--bs-link-color);">Item
                                Name</label></div>
                        <div class="col" style="text-align: center;"><input required name="itemName" type="text"
                                style="border-radius: 8px;box-shadow: 1px 1px 5px var(--bs-blue);" /></div>
                    </div>
                    <div style="position: relative;margin-top: 15px;">
                        <div class="col" style="text-align: center;"><label class="col-form-label"
                                style="position: relative;text-shadow: 0px 0px 0px var(--bs-link-color);">Item
                                Price</label></div>
                        <div class="col" style="text-align: center;"><input required name="price" type="text"
                                style="border-radius: 8px;box-shadow: 1px 1px 5px var(--bs-blue);" /></div>
                    </div>
                    <div style="position: relative;margin-top: 15px;">
                        <div class="col" style="text-align: center;"><label class="col-form-label"
                                style="position: relative;text-shadow: 0px 0px 0px var(--bs-link-color);">Item
                                Description</label></div>
                        <div class="col" style="text-align: center;"><input required name="description" type="text"
                                style="border-radius: 8px;box-shadow: 1px 1px 5px var(--bs-blue);" /></div>
                    </div>
                    <div style="position: relative;margin-top: 15px;">
                        <div class="col" style="text-align: center;">
                            <label class="col-form-label" style="position: relative;text-shadow: 0px 0px 0px var(--bs-link-color);">
                                Food Type
                            </label>
                        </div>
                        <div class="col" style="text-align: center;">
                            <div class="control">
                                <label class="radio">
                                  <input type="radio" checked="" name="foodType" value="None"/>
                                  None
                                </label>
                                <label class="radio">
                                  <input type="radio" name="foodType" value="Vegan"/>
                                  Vegan
                                </label>
                                <label class="radio" >
                                  <input type="radio" name="foodType"  value="Vegetarian"/>
                                  Vegetarian
                                </label>
                              </div>
                        </div>
                    </div>

                    <div style="position: relative;margin-top: 15px;">
                        <div class="col" style="text-align: center;">
                            <label class="col-form-label" style="position: relative;text-shadow: 0px 0px 0px var(--bs-link-color);">
                                Allergies
                            </label>
                            <button type="button" id="addAllergyBtn" class="btn btn-primary" style="margin-left: 10px;">Add Allergy</button>
                        </div>
                        <div class="col" style="text-align: center; margin: 20px;" id="allergyInputs">
                            <!-- Allergy inputs will be added here -->
                        </div>
                        <div id="allergyList" style="text-align: center;  margin: 20px;">
                            <!-- Added allergies will be displayed here -->
                        </div>
                    </div>
                    <div style="position: relative;margin-top: 15px;">
                        <div class="col" style="text-align: center;"><label class="col-form-label"
                                style="position: relative;text-shadow: 0px 0px 0px var(--bs-link-color);">Choose
                                Category</label></div>
                        <div class="col" style="text-align: center;">
                            <div class="dropdown"><button class="btn btn-primary dropdown-toggle" aria-expanded="false"
                                    id="setcategory" data-bs-toggle="dropdown" type="button">Choose Category</button>
                                <input type="hidden" name="categoryId" id="categoryId" />
                                <div class="dropdown-menu setcategory" required>
                                    <% categories.forEach(categry=> { %>
                                        <a class="dropdown-item" id="<%= categry.category_id %>" href="#">
                                            <%= categry.category_name %>
                                        </a>
                                    <% }) %>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="position: relative;margin-top: 15px;">
                        <div class="col" style="text-align: center;">
                            <label class="col-form-label" style="position: relative;text-shadow: 0px 0px 0px var(--bs-link-color);">
                                Item Image
                            </label>
                            <span style=" font-size: small; color: var(--bs-success);">   *(Recommended)</span>
                        </div>
                        <div class="col" style="text-align: center;"><input  name="image" type="file" accept="image/*"
                                style="border-radius: 4px;border-width: 0px;position: relative;" /></div>
                    </div>
                    <div style="position: relative;margin-top: 40px;text-align: center;color: var(--bs-btn-disabled-color);">
                        <button class="btn btn-primary" type="submit"
                            style="background: rgb(42,208,28);position: relative;filter: brightness(96%) contrast(93%);backdrop-filter: blur(46px);transform: perspective(0px) translate(0px);">Add
                            Item</button>
                </form>
                <div class="col" style="margin-top: 20px;">
                    <label style="display: none;" id="messageForAdd"></label>
                </div>

                <div style="border-bottom-style: solid; margin:40px auto; width: 40%; text-align: center;"></div>
                <div class="centered-container" style="margin-top: 60px; margin-bottom: 60px;">
                    <label>Drag and Drop to set the order of the Categories.</label>
                    <div class="col" style="text-align: center; margin-bottom: 10px;">
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" aria-expanded="false" id="orderItems"
                                data-bs-toggle="dropdown" type="button">Choose Category</button>
                            <div class="dropdown-menu orderItems">
                                <% categories.forEach(categry=> { %>
                                    <a class="dropdown-item" id="<%= categry.category_id %>" href="#">
                                        <%= categry.category_name %>
                                    </a>
                                <% }) %>
                            </div>
                        </div>
                    </div>
                    <ul id="sortable" class="sortable-list">
                    </ul>
                </div>
                </div>
                <!-- /.container-fluid -->
                </div>
            <!-- End of Main Content -->

            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; Easy Menu  <%= year %></span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-primary" href="/Logout">Logout</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="/vendor/jquery/jquery.min.js"></script>
    <script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="/js/sb-admin-2.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<!-- Bootstrap Toggle JS -->
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#statusContainer').hide();

            var closeButton = document.querySelector('.modal-footer [data-dismiss="modal"]'); // Target the close button more specifically
    closeButton.addEventListener('click', function() {
        var modalElement = document.getElementById('updateItemModal');
        var modalInstance = bootstrap.Modal.getInstance(modalElement); // Get the Bootstrap Modal instance
        modalInstance.hide(); // Hide the modal properly
    });
            
            // Event listener for dropdown items
            $('.setcategory a').on('click', function () {
                event.preventDefault();
                // Get the text of the clicked item
                var selectedText = $(this).text();
                var selectedId = $(this).attr('id');
                // Update the dropdown button text
                $('#setcategory').text(selectedText);
                // Update the dropdown button data-id attribute
                $('#categoryId').val(selectedId);
            });

            


            $('.deleteitem a').on('click', function () {
                event.preventDefault();
                // Get the text of the clicked item
                var selectedText = $(this).text();
                var selectedId = $(this).attr('id');
                // Update the dropdown button text
                $('#deleteitem').text(selectedText);

                fetch('/get-item-status?itemId=' + selectedId)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                        if (data.item.item_status === true) {
                            $('#toggleStatus').bootstrapToggle('on');
                        } else {
                            $('#toggleStatus').bootstrapToggle('off');
                        }
                        document.getElementById('statusContainer').style.display = 'block';
                        $('#toggleStatus').change(function () {
                            var status = $(this).prop('checked');
                            var itemId = $('#itemId').val();

                            if (itemId === "") {
                                alert('Please select an item to update');
                                return;
                            }
                            fetch('/update-item-status', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ itemId: itemId, status: status }),
                            }).then(response => response.json())
                                .then(data => {
                                    console.log('Success:', data);
                                }).catch((error) => {
                                    alert('Failed, please try again')
                                    console.error('Error:', error);
                                });
                        });
                    }).catch(error => {
                        console.error('Error fetching item status:', error);
                    });

                
                
                $('#itemId').val(selectedId);
            });
        

            $('.setCategoryForUpdate a').on('click', function () {
                // Get the text of the clicked item
                var selectedText = $(this).text();
                var selectedId = $(this).attr('id');
                // Update the dropdown button text
                $('#updateItemCategory').text(selectedText);
                $('#updateCategoryId').val(selectedId);
            });


            // Event listener for dropdown items
            $('.orderItems a').on('click', function () {
                // Get the text of the clicked item
                var selectedText = $(this).text();
                var selectedId = $(this).attr('id');
                // Update the dropdown button text
                $('#orderItems').text(selectedText);
                // Update the dropdown button data-id attribute
                $('#orderItems').attr('data-id', selectedId);

                // Fetch the items for the selected category
                fetch('/get-items?categoryId=' + selectedId)
                    .then(response => response.json())
                    .then(data => {
                        var sortableList = $('#sortable');
                        sortableList.empty(); // Clear the existing list

                        // Populate the sortable list with fetched categories
                        data.items.forEach(function (item) {
                            var listItem = $('<li></li>')
                                .attr('data-id', item.item_id)
                                .text(item.item_name);
                            sortableList.append(listItem);
                        });

                        // Re-initialize sortable after dynamically adding items
                        $("#sortable").sortable("refresh");
                    }).catch(error => {
                        console.error('Error fetching categories:', error);
                    });
            });

            $('form[action="/deleteitem"]').on('submit', function (e) {
            if ($('#itemId').val() === "") {
                e.preventDefault();
                alert('Please Select an Item ');
            }
            });


            $("#sortable").sortable({
                update: function (event, ui) {
                    
                    var sortedIDs = $("#sortable").sortable("toArray", { attribute: "data-id" });
                    console.log(sortedIDs);
                    // Send sortedIDs to your backend to update the priority/order
                    // Example using fetch API:
                    fetch('/reorder-items', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ order: sortedIDs }),
                    }).then(response => response.json())
                        .then(data => {
                            console.log('Success:', data);
                        }).catch((error) => {
                            alert('Failed, please try again')
                            console.error('Error:', error);
                        });
                }
            });
            $("#sortable").disableSelection();
        });

        document.getElementById('addAllergyBtn').addEventListener('click', function() {
            const inputContainer = document.getElementById('allergyInputs');
            const form = document.getElementById('itemForm');
            const input = document.createElement('input');
            input.type = 'text';
            input.style = 'margin-top: 5px; border-radius: 8px; box-shadow: 1px 1px 5px var(--bs-blue);';
            input.placeholder = 'The Letter of the allergy';
            
            const addButton = document.createElement('button');
            addButton.type = 'button';
            addButton.textContent = 'Add';
            addButton.classList.add('btn', 'btn-primary'); 
            addButton.style = 'margin-left: 5px;';
            addButton.onclick = function() {
                const value = input.value.trim();
                if (value) {
                    const allergyList = document.getElementById('allergyList');
                    const allergyValues = document.getElementById('allergies');
                    const allergyLabel = document.createElement('span');
                    allergyLabel.textContent = value;
                    allergyLabel.style = 'display: inline-block; margin: 5px; background: var(--bs-light); padding: 2px 8px; border-radius: 4px;';
                    allergyList.appendChild(allergyLabel);
                    
                    // Correctly concatenate and store the allergy values
                    if (allergyValues.value) {
                        allergyValues.value += ',' + value; // Add a comma before the new value if there's already content
                    } else {
                        allergyValues.value = value; // Just set the value if it's the first entry
                    }
                    
                    input.value = ''; // Clear input after adding
                    }
            };

        if (!document.getElementById('allergies')) {
            const allergyInputs = document.createElement('input');
            allergyInputs.name = 'allergies';
            allergyInputs.type = 'hidden';
            allergyInputs.id = 'allergies';
            form.appendChild(allergyInputs);
        }
    
        inputContainer.appendChild(input);
        inputContainer.appendChild(addButton);
    });

    $('#updateButton').on('click', function () {
        var item_id = $('#itemId').val();
        if (item_id === "") {
            alert('Please select an item to update');
            return;
        }
        

        fetch('/get-item?itemId=' + item_id)
            .then(response => response.json())
            .then(data => {
                const form = document.getElementById('updateItemForm');
                $('#updateItemId').val(data.item.item_id);
                $('#updateItemName').val(data.item.item_name);
                $('#updateItemPrice').val(data.item.price);
                $('#updateItemDescription').val(data.item.description);
                
                // Set the food type
                $('input[name="foodType"][value="' + data.item.food_type + '"]').prop('checked', true);

                // Create a hidden input to store the allergy values
                let allergyInputs = document.getElementById('updateAllergies');
                if (!allergyInputs) {
                    allergyInputs = document.createElement('input');
                    allergyInputs.name = 'allergies';
                    allergyInputs.type = 'hidden';
                    allergyInputs.id = 'updateAllergies';
                    form.appendChild(allergyInputs);
                }
                allergyInputs.value = data.item.allergies || '';

                // Populate allergies
                const updateAllergyList = $('#updateAllergyList').empty();
                const allergies = data.item.allergies ? data.item.allergies.split(',') : [];
                allergies.forEach(allergy => {
                    addAllergyLabel(allergy, updateAllergyList);
                });

                $('#updateAllergies').val(allergies.join(','));

                // Fetch the category name
                fetch('/get-category-name?categoryId=' + data.item.category_id)
                    .then(response => response.json())
                    .then(data => {
                        $('#updateItemCategory').text(data.category.category_name);
                        $('#updateCategoryId').val(data.category.category_id);
                    }).catch(error => {
                        alert('Failed to fetch category details, please try again');
                        console.error('Error fetching category:', error);
                    });

                $('#updateItemModal').modal('show');
            }).catch(error => {
                alert('Failed to fetch item details, please try again');
                console.error('Error fetching item:', error);
            });
    });

    var span = document.getElementsByClassName("close")[0];
    span.onclick = function () {
        var modalElement = document.getElementById('updateItemModal');
        var modalInstance = bootstrap.Modal.getInstance(modalElement); // Get the modal instance
        modalInstance.hide(); // Use the hide method to close the modal properly
    }
    // Function to update allergies list in the hidden input
    function updateAllergiesInput() {
        const allergyLabels = document.getElementById('updateAllergyList').children;
        const allergies = [];
        for (let i = 0; i < allergyLabels.length; i++) {
            allergies.push(allergyLabels[i].innerText.replace('x', '').trim());
        }
        document.getElementById('updateAllergies').value = allergies.join(',');
    }

    // Function to add an allergy label with delete button
    function addAllergyLabel(allergy, container) {
        const allergyLabel = $('<span>').text(allergy).css({
            display: 'inline-block',
            margin: '5px',
            background: 'var(--bs-light)',
            padding: '2px 8px',
            borderRadius: '4px'
        });
        const deleteButton = $('<button>').text('x').css({
            marginLeft: '5px',
            background: 'red',
            color: 'white',
            border: 'none',
            borderRadius: '50%',
            width: '20px',
            height: '20px',
            lineHeight: '16px',
            textAlign: 'center',
            cursor: 'pointer'
        }).click(function() {
            $(this).parent().remove();
            updateAllergiesInput();
        });
        allergyLabel.append(deleteButton);
        container.append(allergyLabel);
    }

    document.getElementById('addUpdateAllergyBtn').addEventListener('click', function() {
        const inputContainer = document.getElementById('updateAllergyInputs');
        const input = document.createElement('input');
        input.type = 'text';
        input.style = 'margin-top: 5px; border-radius: 8px; box-shadow: 1px 1px 5px var(--bs-blue);';
        input.placeholder = 'The Letter of the allergy';
        
        const addButton = document.createElement('button');
        addButton.type = 'button';
        addButton.textContent = 'Add';
        addButton.classList.add('btn', 'btn-primary'); 
        addButton.style = 'margin-left: 5px;';
        addButton.onclick = function() {
            const value = input.value.trim();
            if (value) {
                addAllergyLabel(value, $('#updateAllergyList'));
                updateAllergiesInput();
                input.value = '';
            }
        };

        inputContainer.appendChild(input);
        inputContainer.appendChild(addButton);
    });
    </script>

    
    <script>
        async function updateItem(event) {
            event.preventDefault();
            const form = event.target;
            if (!document.getElementById('updateCategoryId').value) {
            event.preventDefault();
            alert('Please choose a category.');
            return;
            }
            const formData = new FormData(form);
            try {
                const response = await fetch('/update-item', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();
                console.log(data);
                if (data.success) {
                    form.reset();
                    const message = document.getElementById('messageForUpdate');
                    message.innerText = 'Item updated successfully'
                    message.style.display = 'block';
                    message.style.color = 'green';
                    $('#updateItemModal').modal('hide');
                } else {
                    const message = document.getElementById('updateError');
                    message.innerText = data.message;
                    message.style.display = 'block';
                    message.style.color = 'red';
                }
            } catch (error) {
                    form.reset();
                    const updateAllergyList = $('#updateAllergyList').empty();
                    const message = document.getElementById('messageForUpdate');
                    message.innerText = 'Failed to update the item, please try again'
                    message.style.display = 'block';
                    message.style.color = 'red';
                    $('#updateItemModal').modal('hide');
            }
        }
    </script>

    <script>
        async function upload(event) {
            event.preventDefault();
            const form = event.target;
            if (!document.getElementById('categoryId').value) {
            event.preventDefault();
            alert('Please choose a category.');
            return;
            }
            const formData = new FormData(form);
            try {
                const response = await fetch('/additem', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();
                if (data.success) {
                    form.reset();
                    const updateAllergyList = $('#allergyList').empty();
                    const message = document.getElementById('messageForAdd');
                    message.innerText = 'Item added successfully';
                    message.style.display = 'block';
                    message.style.color = 'green';
                } else {
                    const message = document.getElementById('messageForAdd');
                    message.innerText = data.message;
                    message.style.display = 'block';
                    message.style.color = 'red';
                }
            } catch (error) {
                    const updateAllergyList = $('#allergyList').empty();
                    form.reset();
                    const message = document.getElementById('messageForAdd');
                    message.innerText = data.message;
                    message.style.display = 'block';
                    message.style.color = 'red';
            }
        }
    </script>

</body>

</html>


